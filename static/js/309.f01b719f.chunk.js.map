{"version":3,"file":"static/js/309.f01b719f.chunk.js","mappings":"8IACA,OAAgB,KAAO,mBAAmB,YAAc,0BAA0B,YAAc,0BAA0B,WAAa,yBAAyB,YAAc,0BAA0B,YAAc,0BAA0B,YAAc,0BAA0B,QAAU,sBAAsB,cAAgB,4BAA4B,gBAAkB,8BAA8B,kBAAoB,gCAAgC,eAAiB,6BAA6B,OAAS,qBAAqB,MAAQ,oBAAoB,UAAY,wBAAwB,YAAc,0BAA0B,YAAc,2B,uCCoH1oB,EA3Ga,WACX,IAAMA,GAAWC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMF,QAAjB,IACvBG,GAAWC,EAAAA,EAAAA,MACXC,EAAaL,EAChBM,KAAI,SAACC,GAAD,OAAUA,EAAKC,MAAQD,EAAKE,KAA5B,IACJC,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAOC,CAAvB,GAA6B,GAKvC,OACE,iBAAKC,UAAWC,EAAAA,KAAhB,WACE,iBAAKD,UAAWC,EAAAA,YAAhB,WACE,eAAID,UAAWC,EAAAA,YAAf,mBACA,mBAAOD,UAAWC,EAAAA,WAAlB,WACE,4BACE,2BACE,qCACA,sCACA,wCAGJ,2BACGd,EAAS,GACRA,EAASM,KAAI,SAACC,GAAD,OACX,gBAAIM,UAAWC,EAAAA,QAAf,WACE,gBAAID,UAAWC,EAAAA,cAAf,WACE,gBAAKC,IAAKR,EAAKS,IAAKC,IAAKV,EAAKW,SAC9B,iBAAKL,UAAWC,EAAAA,gBAAhB,WACE,8BAASP,EAAKY,OAAd,MAA4BZ,EAAKa,SACjC,wBAAKb,EAAKW,QACTX,EAAKc,OAAQ,mCAAWd,EAAKc,SAC9B,iBACER,UAAWC,EAAAA,OACXQ,QAAS,WACPnB,GAASoB,EAAAA,EAAAA,IAAWhB,GACrB,EAJH,2BAUJ,eAAIM,UAAWC,EAAAA,kBAAf,UACE,iBAAKD,UAAWC,EAAAA,MAAhB,WACE,2BAAQP,EAAKE,SACb,iBAAKI,UAAWC,EAAAA,WAAhB,WACE,gBACED,UAAWC,EAAAA,UACXQ,QAAS,kBAAMnB,GAASqB,EAAAA,EAAAA,IAAcjB,GAA7B,KAEX,gBACEM,UAAWC,EAAAA,YACXQ,QAAS,kBAAMnB,GAASsB,EAAAA,EAAAA,IAAclB,GAA7B,aAKjB,gBAAIM,UAAWC,EAAAA,eAAf,eACKP,EAAKC,MAAQD,EAAKE,WAjCWF,EAAKmB,GAAKnB,EAAKc,KADxC,KAuCb,yBACE,yBACE,mBAAQR,UAAWC,EAAAA,YAAnB,mDAQTd,EAAS,KACR,iCACE,gBAAIa,UAAWC,EAAAA,YAAf,WACE,2BACE,yCACA,iCAAST,SAEX,2BACE,wCACA,uCAEF,2BACE,wCACA,iCAASA,EAAa,aAG1B,mBACEQ,UAAWC,EAAAA,YACXQ,QAAS,WApFnBK,MAAM,iCACNxB,GAASyB,EAAAA,EAAAA,IAAU,IAqFR,EAJH,0BAWN,gBAAKf,UAAWC,EAAAA,YAAhB,UACE,SAACe,EAAA,EAAD,QAIP,C","sources":["webpack://cozy/./src/routes/css/Cart.module.css?bdde","routes/Cart.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cart\":\"Cart_cart__WRooe\",\"cart__inner\":\"Cart_cart__inner__PQGdv\",\"cart__title\":\"Cart_cart__title__P1dlx\",\"cart__list\":\"Cart_cart__list__LkEdG\",\"cart__empty\":\"Cart_cart__empty__OF2s+\",\"cart__total\":\"Cart_cart__total__BZtY3\",\"cart__order\":\"Cart_cart__order__NyyAq\",\"product\":\"Cart_product__NGPJx\",\"product__desc\":\"Cart_product__desc__38yEl\",\"product__option\":\"Cart_product__option__ZzrSy\",\"product__quantity\":\"Cart_product__quantity__kZugm\",\"product__price\":\"Cart_product__price__AqOmS\",\"delete\":\"Cart_delete__Wyz6c\",\"count\":\"Cart_count__tmZni\",\"count__up\":\"Cart_count__up__Elbgx\",\"count__down\":\"Cart_count__down__ycgzN\",\"footer_wrap\":\"Cart_footer_wrap__HY5y4\"};","import styles from \"./css/Cart.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  increaseCount,\n  decreaseCount,\n  deleteCart,\n  resetCart,\n} from \"./../store\";\nimport Footer from \"./../components/Footer\";\n\nconst Cart = () => {\n  const cartData = useSelector((state) => state.cartData);\n  const dispatch = useDispatch();\n  const totalPrice = cartData\n    .map((item) => item.price * item.count)\n    .reduce((prev, curr) => prev + curr, 0);\n  const onClickOrder = () => {\n    alert(\"Your order has been completed\");\n    dispatch(resetCart([]));\n  };\n  return (\n    <div className={styles.cart}>\n      <div className={styles.cart__inner}>\n        <h2 className={styles.cart__title}>Cart</h2>\n        <table className={styles.cart__list}>\n          <thead>\n            <tr>\n              <th>Product</th>\n              <th>Quantity</th>\n              <th>Price</th>\n            </tr>\n          </thead>\n          <tbody>\n            {cartData[0] ? (\n              cartData.map((item) => (\n                <tr className={styles.product} key={item.id + item.size}>\n                  <td className={styles.product__desc}>\n                    <img src={item.url} alt={item.title}/>\n                    <div className={styles.product__option}>\n                      <strong>{item.gender} &gt; {item.cate}</strong>\n                      <h3>{item.title}</h3>\n                      {item.size && <p>SIZE : {item.size}</p>}\n                      <span\n                        className={styles.delete}\n                        onClick={() => {\n                          dispatch(deleteCart(item));\n                        }}\n                      >\n                        DELETE\n                      </span>\n                    </div>\n                  </td>\n                  <td className={styles.product__quantity}>\n                    <div className={styles.count}>\n                      <small>{item.count}</small>\n                      <div className={styles.count__btn}>\n                        <div\n                          className={styles.count__up}\n                          onClick={() => dispatch(increaseCount(item))}\n                        ></div>\n                        <div\n                          className={styles.count__down}\n                          onClick={() => dispatch(decreaseCount(item))}\n                        ></div>\n                      </div>\n                    </div>\n                  </td>\n                  <td className={styles.product__price}>\n                    $ {item.price * item.count}\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td>\n                  <strong className={styles.cart__empty}>\n                    Your shopping cart is empty!\n                  </strong>\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n        {cartData[0] && (\n          <>\n            <ul className={styles.cart__total}>\n              <li>\n                <span>Sub Total</span>\n                <span>$ {totalPrice}</span>\n              </li>\n              <li>\n                <span>Shipping</span>\n                <span>$ 10</span>\n              </li>\n              <li>\n                <span>Shipping</span>\n                <span>$ {totalPrice + 10}</span>\n              </li>\n            </ul>\n            <button\n              className={styles.cart__order}\n              onClick={() => {\n                onClickOrder();\n              }}\n            >\n              order\n            </button>\n          </>\n        )}\n      </div>\n      <div className={styles.footer_wrap}>\n        <Footer />\n      </div>\n    </div>\n  );\n};\n\nexport default Cart;\n"],"names":["cartData","useSelector","state","dispatch","useDispatch","totalPrice","map","item","price","count","reduce","prev","curr","className","styles","src","url","alt","title","gender","cate","size","onClick","deleteCart","increaseCount","decreaseCount","id","alert","resetCart","Footer"],"sourceRoot":""}